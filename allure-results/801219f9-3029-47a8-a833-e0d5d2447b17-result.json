{"name": "Скачивание Изоб", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"8af04c6be0b847032c541738a85fb596\")>, image_index = 0\n\n    @allure.feature(\"Pics download\")\n    @allure.story(\"Скачивание изображения\")\n    @allure.title(\"Скачивание Изоб\")\n    @allure.description(\"Тест выполняет скачивание первой картинки в поиске'.\")\n    def test_download_image(driver, image_index=0):\n        with allure.step(\"Сделать поиск крокодила\"):\n    \n            # Найти изображения на странице (например, первое изображение)\n            search_box = driver.find_element(\"name\", 'q')\n            search_box.send_keys('crocodile')\n            search_box.send_keys(Keys.RETURN)  # Press Enter to perform the search\n            time.sleep(5)\n        with allure.step(\"Переход в раздел 'Картинки'\"):\n            pics_but = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\"xpath\", \"//div[text() = 'Картинки']\")))\n            pics_but.click()\n>       images = WebDriverWait(driver, 10).until(\n            EC.presence_of_all_elements_located((\"xpath\", \"// img[ @ id = 'dimg_yg1gZ8fQL-a1wN4Pyt-d-Aw_19']\"))\n        )\n\nfirefox.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8af04c6be0b847032c541738a85fb596\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x0000019403A672E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Тест выполняет скачивание первой картинки в поиске'.", "steps": [{"name": "Сделать поиск крокодила", "status": "passed", "start": 1734961540420, "stop": 1734961545725}, {"name": "Переход в раздел 'Картинки'", "status": "passed", "start": 1734961545725, "stop": 1734961547874}], "start": 1734961540420, "stop": 1734961557908, "uuid": "beb5dffa-8e4d-4d2f-9163-7b349b6d8a0b", "historyId": "7f63a20a2e19d73512b4e6a7fcc46a68", "testCaseId": "7f63a20a2e19d73512b4e6a7fcc46a68", "fullName": "firefox#test_download_image", "labels": [{"name": "feature", "value": "Pics download"}, {"name": "story", "value": "Скачивание изображения"}, {"name": "suite", "value": "firefox"}, {"name": "host", "value": "Beelink_miniPC"}, {"name": "thread", "value": "15972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "firefox"}]}